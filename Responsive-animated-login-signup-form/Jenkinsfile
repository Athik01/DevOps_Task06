pipeline {
    agent any

    environment {
        DOCKER_IMAGE   = "mohamedathikr/my-node-app:latest"
        // Set your kubeconfig path globally so all stages can use it.
        KUBECONFIG     = "C:\\Users\\rathi\\.kube\\config"
        // Use the full path to your deployment YAML file.
        K8S_DEPLOYMENT = "Responsive-animated-login-signup-form/k8s/node-app-deployment.yaml"
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                echo "üßπ Cleaning workspace..."
                cleanWs()
            }
        }

        stage('Clone Repository') {
            steps {
                echo "üì• Cloning repository..."
                git branch: 'main', url: 'https://github.com/Athik01/DevOps_Task06.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "üê≥ Building Docker Image: $DOCKER_IMAGE"
                    powershell """
                        echo 'üöÄ Starting Docker Build...'
                        docker build -t $DOCKER_IMAGE -f Responsive-animated-login-signup-form/Dockerfile Responsive-animated-login-signup-form/
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    echo "üì§ Pushing Docker Image to Docker Hub..."
                    withDockerRegistry([credentialsId: 'docker-hub-credentials', url: '']) {
                        powershell """
                            echo 'üîÑ Logging in to Docker Hub...'
                            docker login -u mohamedathikr -p qwerty786!A
                            echo 'üöÄ Pushing Image: $DOCKER_IMAGE'
                            docker push $DOCKER_IMAGE
                        """
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                powershell '''
                    echo "Using kubeconfig: $env:KUBECONFIG"
                    kubectl config get-contexts
                    # Optionally, switch to the desired context (e.g., minikube) if required:
                    # kubectl config use-context minikube
                    echo "Deploying to Kubernetes..."
                    kubectl apply -f "$env:K8S_DEPLOYMENT" --validate=false
                    kubectl get pods
                '''
            }
        }

        stage('Verify Deployment') {
            steps {
                powershell '''
                    echo "Verifying Kubernetes Deployment..."
                    echo "Using kubeconfig: $env:KUBECONFIG"
                    kubectl get pods
                '''
            }
        }
    }
}
